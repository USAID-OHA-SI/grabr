[{"path":"https://usaid-oha-si.github.io/grabr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 20202 Aaron Chafetz Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://usaid-oha-si.github.io/grabr/articles/data-extraction-from-panorama.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Data Extraction from Panorama","text":"vignette provides guidance identify extract data sets output files stored S/FTP site.","code":""},{"path":"https://usaid-oha-si.github.io/grabr/articles/data-extraction-from-panorama.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"Data Extraction from Panorama","text":"PEPFAR/Panorama releases, quarterly basis, global programs’ Monitoring, Evaluation Reporting (MER), Financial, SIMS, Narratives.","code":""},{"path":"https://usaid-oha-si.github.io/grabr/articles/data-extraction-from-panorama.html","id":"pre-requisites","dir":"Articles","previous_headings":"","what":"Pre-requisites","title":"Data Extraction from Panorama","text":"","code":"library(tidyverse) library(glamr) library(grabr)"},{"path":"https://usaid-oha-si.github.io/grabr/articles/data-extraction-from-panorama.html","id":"create-an-active-session","dir":"Articles","previous_headings":"","what":"Create an active session","title":"Data Extraction from Panorama","text":"Panorama protected site user need authenticate order order explore dashboards. true data extraction. create active valid session http requests, use pano_session()","code":"load_secrets()  user <- pano_user() pass <- pano_pwd()"},{"path":"https://usaid-oha-si.github.io/grabr/articles/data-extraction-from-panorama.html","id":"extract-content-from-download-page","dir":"Articles","previous_headings":"","what":"Extract content from download page","title":"Data Extraction from Panorama","text":"order extract list data items download page, need active session html content page. can achieved pano_items(). wood, valid session created, html elements extracted (pano_content()) parsed (pano_elements()) data frame. pano_items() combines pano_content() pano_elements() 1 function quick access data items list specific page.","code":"url <- \"https://pepfar-panorama.org/forms/downloads/\"  mer_items <- pano_items(page_url = dir_mer_path,                          username = user,                         password = pass)   mer_items"},{"path":"https://usaid-oha-si.github.io/grabr/articles/data-extraction-from-panorama.html","id":"download-specific-items-from-panorama","dir":"Articles","previous_headings":"","what":"Download specific items from Panorama","title":"Data Extraction from Panorama","text":"data items download page Panorama listed zipped files. download local directory, need use pano_download() function. function wrapper httr::GET() function write option set local directory.","code":"dest_path <- \"../../../Temp/\"  url <- mer_items %>%    filter(type == \"file zip_file\",          str_detect(item, \".*_PSNU_IM_FY19-21_.*.zip$\")) %>%    pull(path) %>%    first()   url  pano_download(item_url = url, session = sess, dest = dest_path)"},{"path":"https://usaid-oha-si.github.io/grabr/articles/data-extraction-from-panorama.html","id":"download-mutiple-items-from-panorama","dir":"Articles","previous_headings":"","what":"Download mutiple items from Panorama","title":"Data Extraction from Panorama","text":"pano_extract() good batch processing. Eg: download MER data sets Panorama. function combine steps one.","code":"items <- pano_extract(item = \"mer\",                        version = \"clean\",                        fiscal_year = 2023,                        quarter = 4,                       username = user,                       password = pass,                       unpack = TRUE)  items  url_items <- items %>%   filter(type == \"file zip_file\") %>%   pull(path) %>%   first() %>% # remove this to downlaod all zipped files   walk(~pano_download(item_url = .x,                        session = sess,                        dest = dest_path))"},{"path":"https://usaid-oha-si.github.io/grabr/articles/data-extraction-from-panorama.html","id":"download-specific-msd-ou-specific-items-from-panorama","dir":"Articles","previous_headings":"","what":"Download specific MSD / OU Specific items from Panorama","title":"Data Extraction from Panorama","text":"pano_extract_msd() designed facilitate download MSD files specific operating units specific org hierarchy level. Eg: download Zambia’s Site x IM data sets Panorama.","code":"pano_extract_msd(operatingunit = \"Zambia\",                    version = \"clean\",                    fiscal_year = 2021,                    quarter = 3,                    level = \"site\",                    dest_path = NULL)"},{"path":"https://usaid-oha-si.github.io/grabr/articles/data-extraction-from-panorama.html","id":"download-latest-msd-ou-specific-items-from-panorama","dir":"Articles","previous_headings":"","what":"Download latest MSD / OU Specific items from Panorama","title":"Data Extraction from Panorama","text":"pano_extract_msds() designed facilitate download management latest MSD files global /specific operating units. function also move existing files Archive folder downloading current files. Users also able include / exclude global datasets add_global = TRUE.","code":"pano_extract_msds(operatingunit = \"Zambia\",                     archive = TRUE,                     dest_path = si_path(),                     username = pano_user(),                     password = pano_pwd())"},{"path":"https://usaid-oha-si.github.io/grabr/articles/data-lookup-and-extraction-from-datim.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Look up and extract organization hierarchy","text":"vignette crafted provides overview look key details organizational hierarchy (Orgunits) data elements, extract data DATIM DHIS2 API. ’ve wrapped recurring Datim queries data munging codes functions made sure take away need users remember UIDs. example function, get_ouuid() built top get_outable().","code":""},{"path":"https://usaid-oha-si.github.io/grabr/articles/data-lookup-and-extraction-from-datim.html","id":"functions-reference","dir":"Articles","previous_headings":"","what":"Functions reference","title":"Look up and extract organization hierarchy","text":"functions dedicated Datim Queries listed package’s page start either datim_*() get_*(). Functions dedicated look tasks get_ouuid() provides uid specified OU get_ouorglabel() provides label org level. Eg. Zambia’s psnu level #5 get_ouorglevel() opposite get_ouorglabel. Provides level orgunit label Functions dedicated queries get_outable() returns PEPFAR OU/Countries along UIDs Code get_levels() returns organizational hierarchy levels get_ouorgs() returns OU’s Orgunits specific level datim_sqlviews() returns list sqlviews, uid/data specific view datim_orgunits() returns organisation units datim_mechs() returns implementing mechanisms etc …","code":""},{"path":"https://usaid-oha-si.github.io/grabr/articles/data-lookup-and-extraction-from-datim.html","id":"look-ups","dir":"Articles","previous_headings":"","what":"Look ups","title":"Look up and extract organization hierarchy","text":"couple ways ’ve used look functions. SI Backstop’s work country specific data acquisition munging gears toward . also serve us well terms supporting code re-usability sharing principle. Let say Analyst supports Nigeria Mozambique Zambia, wants get operating unit’s uid(s). also accomplished filter pull functions, image query datim using OU UIDs query parameter. get_ouuid() mainly used mapping related tasks given VcPolygons dataset contains uid geometry information. situations one want confirm levels labels (type) interest querying Datim resources. examples , look orgunit labels based levels, vis-versa. results can used query orgunits Datim DHIS2 API.","code":"suppressPackageStartupMessages({     library(tidyverse)     library(grabr)     library(glue)   })    cntry <- \"Nigeria\"      cntry_iso <- glamr::pepfar_country_xwalk %>%      filter(country == cntry) %>%      pull(iso3c)      cntries <- c(\"Mozambique\", \"Zambia\")    get_ouuid(operatingunit = cntry)       cntries %>% map(get_ouuid) %>% unlist() # Look up org levels   get_ouorglabel(operatingunit = cntry, org_level = 4)    1:3 %>% map(~get_ouorglabel(operatingunit = cntry, org_level = .x)) %>% unlist()      # Look up org types   get_ouorglevel(operatingunit = cntry, org_type = \"prioritization\")      c(\"community\", \"facility\") %>%      map(~get_ouorglevel(operatingunit = cntry, org_type = .x)) %>% unlist()"},{"path":"https://usaid-oha-si.github.io/grabr/articles/data-lookup-and-extraction-from-datim.html","id":"queries","dir":"Articles","previous_headings":"","what":"Queries","title":"Look up and extract organization hierarchy","text":"grabr package focuses primarily data queries DATIM / DHIS2 API. functions allows users extract data directly Data Dimensions, SQLView Resources, Analytics. Dimensions core building blocks DHIS2 data model DATIM 4 : 1) Data Element & Category Option Combos (), 2) Organisation units (), 3) Reporting period (), 2) Attribution Option Combos ().","code":""},{"path":"https://usaid-oha-si.github.io/grabr/articles/data-lookup-and-extraction-from-datim.html","id":"dimensions","dir":"Articles","previous_headings":"Queries","what":"Dimensions","title":"Look up and extract organization hierarchy","text":"Yes, can query dimensions extract specific uids. ? Knowing dimensions available within Datim enables users specific queries. datim_query() leverage dimensions build query string specific need.","code":"# List all dimensions   df_dims <- datim_dimensions()    df_dims %>% glimpse()      df_dims %>% filter(str_detect(dimension, \"Age\"))      # List options available within a dimension   datim_dim_items(dimension = \"Funding Agency\")      # Get specific dimension uid   datim_dim_item(dimension = \"Funding Agency\", name = \"USAID\") # query PLHIV number   datim_pops(ou = cntry)    # More detailed requests with dimension names (converted into uid)   datim_query(     ou = cntry,                    # Operating unit     level = \"country\",             # org level     pe = \"2022Oct\",                 # periods     ta = \"PLHIV\",                  # From dimension: Technical Area     value = \"MER Targets\",         # From dimension: Targets / Results     disaggs = \"Age/Sex/HIVStatus\", # From dimension: Disaggregation Type     dimensions = c(\"Sex\"),         # Additional dimension: Sex     baseurl = \"https://datim.org/\",     verbose = TRUE   )"},{"path":"https://usaid-oha-si.github.io/grabr/articles/data-lookup-and-extraction-from-datim.html","id":"sqlviews","dir":"Articles","previous_headings":"Queries","what":"SQLViews","title":"Look up and extract organization hierarchy","text":"SQLViews contain relevant data sets use reference HFR CIRG data validation. Working versions data dimensions also available SQLViews. SQLView - Organisation Units Given size Organisation Units dataset, filtered queries allowed. Users need add OU/Countries ISO3 code variable parameter query. query also simplified datim_orgunits(). Implementing Mechanisms can also extracted datim_mechs() go datim_sqlviews().","code":"df_views <- datim_sqlviews()    df_views %>% glimpse()      df_views %>% filter(str_detect(name, \"Data Exchange\")) # check the uid of Organisation Units   datim_sqlviews(view_name = \"Data Exchange: Organisation Units\", dataset = FALSE)    # Extract Organisation Units data for a specific country - All levels with child / parent links   df_cntry <- datim_sqlviews(view_name = \"Data Exchange: Organisation Units\",                               dataset = TRUE,                              query = list(type = \"variable\", params = list(\"OU\" = cntry_iso)))      df_cntry %>% glimpse() # Extract Organisation Units data for a specific country   datim_orgunits(cntry = \"Malawi\") %>% dplyr::glimpse()    # Extract Organisation Units data for a specific country - expand child / parent relationship from facility to OU   # Note some missing levels may be filled in or duplicated in for the the reshaping to work   datim_orgunits(cntry = \"Malawi\", reshape = TRUE) %>% dplyr::glimpse() # Extact Mechanisms information for specific OU   datim_mechs(cntry = cntry, agency = \"USAID\") %>% glimpse()"},{"path":"https://usaid-oha-si.github.io/grabr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aaron Chafetz. Author, maintainer. Tim Essam. Author. Baboyma Kagniniwa. Author.","code":""},{"path":"https://usaid-oha-si.github.io/grabr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Chafetz , Essam T, Kagniniwa B (2024). grabr: OHA/SI APIs Package. R package version 2.1.1, https://usaid-oha-si.github.io/grabr/, https://github.com/USAID-OHA-SI/grabr.","code":"@Manual{,   title = {grabr: OHA/SI APIs Package},   author = {Aaron Chafetz and Tim Essam and Baboyma Kagniniwa},   year = {2024},   note = {R package version 2.1.1,     https://usaid-oha-si.github.io/grabr/},   url = {https://github.com/USAID-OHA-SI/grabr}, }"},{"path":"https://usaid-oha-si.github.io/grabr/index.html","id":"grabr-","dir":"","previous_headings":"","what":"OHA/SI APIs Package","title":"OHA/SI APIs Package","text":"OHA/SI API package","code":""},{"path":"https://usaid-oha-si.github.io/grabr/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"OHA/SI APIs Package","text":"package provides series base functions useful OHA/SI team. function extend utility functions glamr, focusing primarily API utility functions.","code":""},{"path":"https://usaid-oha-si.github.io/grabr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"OHA/SI APIs Package","text":"grabr CRAN, install directly rOpenSci GitHub using code found . Disclaimer: findings, interpretation, conclusions expressed herein authors necessarily reflect views United States Agency International Development. errors remain .","code":"## SETUP   #install from rOpenSci     install.packages('grabr', repos = c('https://usaid-oha-si.r-universe.dev', getOption(\"repos\")))        #alt: install from GitHub using pak     #install.packages(\"pak\")     #pak::pak(\"USAID-OHA-SI/grabr\")        #load the package     library(grabr)  ## LIST TYPES OF STYLES INCLUDED WITH PACKAGE   ls(\"package:grabr\")"},{"path":"https://usaid-oha-si.github.io/grabr/reference/PEPFAR-Panorama-base-url.html","id":null,"dir":"Reference","previous_headings":"","what":"PEPFAR Panorama Base URL — PEPFAR Panorama base url","title":"PEPFAR Panorama Base URL — PEPFAR Panorama base url","text":"PEPFAR Panorama Base URL","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/PEPFAR-Panorama-base-url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PEPFAR Panorama Base URL — PEPFAR Panorama base url","text":"","code":"pano_url"},{"path":"https://usaid-oha-si.github.io/grabr/reference/PEPFAR-Panorama-base-url.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PEPFAR Panorama Base URL — PEPFAR Panorama base url","text":"object class character length 1.","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/check_internet.html","id":null,"dir":"Reference","previous_headings":"","what":"Check internet connection — check_internet","title":"Check internet connection — check_internet","text":"Check internet connection","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/check_internet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check internet connection — check_internet","text":"","code":"check_internet()"},{"path":"https://usaid-oha-si.github.io/grabr/reference/check_internet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check internet connection — check_internet","text":"boolean stops","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/clean_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean org hierarchy levels — clean_levels","title":"Clean org hierarchy levels — clean_levels","text":"Clean org hierarchy levels","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/clean_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean org hierarchy levels — clean_levels","text":"","code":"clean_levels(.df_levels)"},{"path":"https://usaid-oha-si.github.io/grabr/reference/clean_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean org hierarchy levels — clean_levels","text":".df_levels Org levels data frame","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/clean_levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean org hierarchy levels — clean_levels","text":"df","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/clean_levels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean org hierarchy levels — clean_levels","text":"","code":"if (FALSE) { # \\dontrun{   library(gisr)    # Get PEPFAR Org Levels   clean_levels(df_lvls)  } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/clean_orgunits.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Orgunits SQLView — clean_orgunits","title":"Clean Orgunits SQLView — clean_orgunits","text":"Clean Orgunits SQLView","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/clean_orgunits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Orgunits SQLView — clean_orgunits","text":"","code":"clean_orgunits(.orgs, .org_levels)"},{"path":"https://usaid-oha-si.github.io/grabr/reference/clean_orgunits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Orgunits SQLView — clean_orgunits","text":".orgs Raw country orgunits data `datim_orgunits()` .org_levels Expanded Reshaped country orgunits levels","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/clean_orgunits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Orgunits SQLView — clean_orgunits","text":"Cleaned OU/Country Orgunits data frame","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_dim_item.html","id":null,"dir":"Reference","previous_headings":"","what":"Get dimension / item id — datim_dim_item","title":"Get dimension / item id — datim_dim_item","text":"Get dimension / item id","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_dim_item.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get dimension / item id — datim_dim_item","text":"","code":"datim_dim_item(   dimension,   name,   username,   password,   baseurl = \"https://final.datim.org/\" )"},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_dim_item.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get dimension / item id — datim_dim_item","text":"dimension Dimension name name Item name username DATIM Account Username password DATIM Account password baseurl DATIM API end point","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_dim_item.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get dimension / item id — datim_dim_item","text":"UID item","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_dim_item.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get dimension / item id — datim_dim_item","text":"","code":"if (FALSE) { # \\dontrun{   library(grabr)    datim_dim_item(dimension = \"Funding Agency\", name = \"USAID\")    datim_dim_item(dimension = \"Targets / Results\", name = \"MER Results\")   datim_dim_item(dimension = \"Targets / Results\", name = \"MER Targets\") } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_dim_items.html","id":null,"dir":"Reference","previous_headings":"","what":"Get PEPFAR/DATIM Dimension Items — datim_dim_items","title":"Get PEPFAR/DATIM Dimension Items — datim_dim_items","text":"Get PEPFAR/DATIM Dimension Items","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_dim_items.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get PEPFAR/DATIM Dimension Items — datim_dim_items","text":"","code":"datim_dim_items(   dimension,   username,   password,   var = NULL,   fields = NULL,   baseurl = \"https://final.datim.org/\" )"},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_dim_items.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get PEPFAR/DATIM Dimension Items — datim_dim_items","text":"dimension Dimension name username DATIM Account Username password DATIM Account passward var column name pull values , id item fields list column names return, overwrite `var` baseurl DATIM API end point","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_dim_items.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get PEPFAR/DATIM Dimension Items — datim_dim_items","text":"Dimension's items tibble vector","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_dim_items.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get PEPFAR/DATIM Dimension Items — datim_dim_items","text":"","code":"if (FALSE) { # \\dontrun{   library(grabr)    datim_dim_items(dimension = \"Funding Agency\")   datim_dim_items(dimension = \"Funding Agency\", var = \"item\") } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_dim_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Build PEPFAR/DATIM Query dimension — datim_dim_url","title":"Build PEPFAR/DATIM Query dimension — datim_dim_url","text":"Build PEPFAR/DATIM Query dimension","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_dim_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build PEPFAR/DATIM Query dimension — datim_dim_url","text":"","code":"datim_dim_url(   dimension,   items = NULL,   username,   password,   baseurl = \"https://final.datim.org/\" )"},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_dim_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build PEPFAR/DATIM Query dimension — datim_dim_url","text":"dimension Dimension name items Item name username DATIM Account Username password DATIM Account passward baseurl DATIM API End point","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_dim_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build PEPFAR/DATIM Query dimension — datim_dim_url","text":"Valid DATIM Query Params url","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_dim_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build PEPFAR/DATIM Query dimension — datim_dim_url","text":"","code":"if (FALSE) { # \\dontrun{   library(grabr)    datim_dim_url(dimension = \"Sex\")    datim_dim_url(     dimension = \"Disaggregation Type\",     items = \"Age/Sex/HIVStatus\"   )    datim_dim_url(     dimension = \"Disaggregation Type\",     items = c(\"Age/Sex\", \"Age/Sex/HIVStatus\")   )  } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Get PEPFAR/DATIM Dimension ID — datim_dimension","title":"Get PEPFAR/DATIM Dimension ID — datim_dimension","text":"Get PEPFAR/DATIM Dimension ID","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get PEPFAR/DATIM Dimension ID — datim_dimension","text":"","code":"datim_dimension(name, username, password, baseurl = \"https://final.datim.org/\")"},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get PEPFAR/DATIM Dimension ID — datim_dimension","text":"name Dimension name username DATIM Account Username, recommended using glamr::datim_user()` password DATIM Account passward, recommended using glamr::datim_pwd()` baseurl DATIM API End point, default value `https://final.datim.org/`","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get PEPFAR/DATIM Dimension ID — datim_dimension","text":"dimension uid","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_dimension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get PEPFAR/DATIM Dimension ID — datim_dimension","text":"","code":"if (FALSE) { # \\dontrun{   library(grabr)   datim_dimension(\"OU Level\") } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get PEPFAR/DATIM dimensions — datim_dimensions","title":"Get PEPFAR/DATIM dimensions — datim_dimensions","text":"Get PEPFAR/DATIM dimensions","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get PEPFAR/DATIM dimensions — datim_dimensions","text":"","code":"datim_dimensions(   username,   password,   var = NULL,   baseurl = \"https://final.datim.org\" )"},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get PEPFAR/DATIM dimensions — datim_dimensions","text":"username DATIM Account Username password DATIM Account passward var Column name pull values , default NULL, options : id, dimension baseurl DATIM API End point, , default value `https://final.datim.org`","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get PEPFAR/DATIM dimensions — datim_dimensions","text":"Dimensions tibble list ids / dimension names","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get PEPFAR/DATIM dimensions — datim_dimensions","text":"","code":"if (FALSE) { # \\dontrun{   library(grabr)    datim_dimensions() } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_execute_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute Datim Query — datim_execute_query","title":"Execute Datim Query — datim_execute_query","text":"Execute Datim Query","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_execute_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute Datim Query — datim_execute_query","text":"","code":"datim_execute_query(url, username, password, flatten = FALSE)"},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_execute_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute Datim Query — datim_execute_query","text":"url API Base url & query parameters username Datim username, recommend using `glamr::datim_user()` password Datim password, recommend using `glamr::datim_pwd()` flatten query json result flatten? Default false","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_execute_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute Datim Query — datim_execute_query","text":"returns query results json object, NULL error occurs.","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_execute_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute Datim Query — datim_execute_query","text":"","code":"if (FALSE) { # \\dontrun{   library(grabr)    datim_execute_query(     url = 'https://www.datim.org/api/sqlViews/<uid>?format=json',     username =glamr::datim_user(),     password =glamr::datim_pwd(),     flatten = TRUE   ) } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_mechs.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Mechanisms infos from Datim — datim_mechs","title":"Extract Mechanisms infos from Datim — datim_mechs","text":"Extract Mechanisms infos Datim","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_mechs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Mechanisms infos from Datim — datim_mechs","text":"","code":"datim_mechs(cntry, username, password, agency = \"USAID\", baseurl = NULL)"},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_mechs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Mechanisms infos from Datim — datim_mechs","text":"cntry Country name username Datim username password Datim password agency Agency name baseurl Datim API Base URL","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_mechs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Mechanisms infos from Datim — datim_mechs","text":"OU Mechanisms data frame","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_mechs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Mechanisms infos from Datim — datim_mechs","text":"","code":"if (FALSE) { # \\dontrun{   library(grabr)    datim_mechs(    cntry = \"Mozambique\",    username = glamr::datim_user(),    password = glamr::datim_pwd()   ) } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_orgunits.html","id":null,"dir":"Reference","previous_headings":"","what":"Pull Orgunits SQLView — datim_orgunits","title":"Pull Orgunits SQLView — datim_orgunits","text":"Pull Orgunits SQLView","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_orgunits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pull Orgunits SQLView — datim_orgunits","text":"","code":"datim_orgunits(   cntry,   username,   password,   reshape = FALSE,   baseurl = \"https://final.datim.org/\" )"},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_orgunits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pull Orgunits SQLView — datim_orgunits","text":"cntry Country name username Datim username password Datim password reshape Unpack parent org units baseurl Datim API Base URL, default https://final.datim.org/","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_orgunits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pull Orgunits SQLView — datim_orgunits","text":"OU/Country Orgunits data frame","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_orgunits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pull Orgunits SQLView — datim_orgunits","text":"","code":"if (FALSE) { # \\dontrun{   library(grabr)    datim_orgunits(    cntry = \"Mozambique\",    username = glamr::datim_user(),    password = glamr::datim_pwd()   ) } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_pops.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract PLHIV and General POP Estimates from datim — datim_pops","title":"Extract PLHIV and General POP Estimates from datim — datim_pops","text":"Extract PLHIV General POP Estimates datim","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_pops.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract PLHIV and General POP Estimates from datim — datim_pops","text":"","code":"datim_pops(   ou,   username,   password,   level = \"country\",   fy = NULL,   hierarchy = FALSE,   baseurl = \"https://final.datim.org/\" )"},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_pops.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract PLHIV and General POP Estimates from datim — datim_pops","text":"ou Operatingunit username Datim account username password Datim account password level Organization level fy Fiscal Year hierarchy additional organizational hierarchy added?, default FALSE baseurl DATIM API base url","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_pops.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract PLHIV and General POP Estimates from datim — datim_pops","text":"PLHIV POP_EST Data","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_pops.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract PLHIV and General POP Estimates from datim — datim_pops","text":"","code":"if (FALSE) { # \\dontrun{   library(grabr)    datim_pops(ou = \"Nigeria\")    datim_pops(ou = \"Nigeria\", fy = 2021)    datim_pops(ou = \"Nigeria\", level = \"psnu\", fy = 2021, hierarchy = TRUE) } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_process_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Datim Query results — datim_process_query","title":"Process Datim Query results — datim_process_query","text":"Process Datim Query results","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_process_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Datim Query results — datim_process_query","text":"","code":"datim_process_query(url, username, password)"},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_process_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Datim Query results — datim_process_query","text":"url Datim API Call url username Datim username, recommend using `glamr::datim_user()` password Datim password, recommend using `glamr::datim_pwd()`","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_process_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Datim Query results — datim_process_query","text":"Data tibble NULL error occurs.","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_process_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process Datim Query results — datim_process_query","text":"","code":"if (FALSE) { # \\dontrun{  library(grabr)  datim_process_query(\"<full-api-call-url>\") } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_pull_hierarchy.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract PEPFAR Org Hierarchy — datim_pull_hierarchy","title":"Extract PEPFAR Org Hierarchy — datim_pull_hierarchy","text":"Extract PEPFAR Org Hierarchy","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_pull_hierarchy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract PEPFAR Org Hierarchy — datim_pull_hierarchy","text":"","code":"datim_pull_hierarchy(   ou_uid,   username,   password,   add_geom = FALSE,   baseurl = \"https://final.datim.org/\",   folderpath_output = NULL )"},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_pull_hierarchy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract PEPFAR Org Hierarchy — datim_pull_hierarchy","text":"ou_uid UID country, recommend using identify_ouuids username DATIM username, recommend using datim_user password DATIM password, recommend using datim_pwd add_geom Add geometry column output, default false baseurl API base url, default = https://final.datim.org/ folderpath_output provide full path folder saving","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_pull_hierarchy.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Extract PEPFAR Org Hierarchy — datim_pull_hierarchy","text":"function migrated Wavelength similar datim_orgunits","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_pull_hierarchy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract PEPFAR Org Hierarchy — datim_pull_hierarchy","text":"","code":"if (FALSE) { # \\dontrun{ #get OU UID   ouuid <- identify_ouuids() %>% dplyr::filter(country == \"Kenya\") #pull hierarchy (paths are all UIDs)   df <- datim_pull_hierarchy(ouuid, username = myuser, password = mypwd(myuser)) } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Query PEPFAR/DATIM targets/results data — datim_query","title":"Query PEPFAR/DATIM targets/results data — datim_query","text":"Query PEPFAR/DATIM targets/results data","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query PEPFAR/DATIM targets/results data — datim_query","text":"","code":"datim_query(   ou,   username,   password,   level = \"prioritization\",   pe = \"THIS_FINANCIAL_YEAR\",   ta = \"PLHIV\",   value = NULL,   disaggs = NULL,   dimensions = NULL,   property = \"SHORTNAME\",   metadata = TRUE,   hierarchy = TRUE,   baseurl = \"https://final.datim.org/\",   verbose = FALSE )"},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query PEPFAR/DATIM targets/results data — datim_query","text":"ou Operatingunit username Datim username password Datim username level Organization hierarchy level pe Reporting period. can expressed relative fixed periods Eg.: \"THIS_FINANCIAL_YEAR\", \"2020Oct\", \"QUARTERS_THIS_YEAR\", \"2021Q2\" default \"THIS_FINANCIAL_YEAR\" ta Technical Area, valid option can obtain glamr::datim_dim_items(\"Technical Area\")` value Type value return, MER Targets Results disaggs Disaggregation Types. depends value ta dimensions Additional dimensions /columns. depends values ta disaggs property Type name metadata metadata included hierarchy additional hirarchy level included baseurl DATIM API End point url verbose Display notifications","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query PEPFAR/DATIM targets/results data — datim_query","text":"data tibble","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query PEPFAR/DATIM targets/results data — datim_query","text":"","code":"if (FALSE) { # \\dontrun{  library(grabr)   datim_query(ou = \"Nigeria\", ta = \"PLHIV\")   datim_query(ou = \"Nigeria\", ta = \"POP_EST\")   datim_query(ou = \"Nigeria\",              level = \"country\",              ta = \"TX_CURR\",              disaggs = \"Age/Sex/HIVStatus\",              dimensions = c(\"Age: <15/15+  (Coarse)\", \"Sex\")) } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_sqlviews.html","id":null,"dir":"Reference","previous_headings":"","what":"Query Datim SQLViews — datim_sqlviews","title":"Query Datim SQLViews — datim_sqlviews","text":"Query Datim SQLViews","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_sqlviews.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query Datim SQLViews — datim_sqlviews","text":"","code":"datim_sqlviews(   username,   password,   view_name = NULL,   dataset = FALSE,   datauid = NULL,   query = NULL,   baseurl = NULL )"},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_sqlviews.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query Datim SQLViews — datim_sqlviews","text":"username Datim username password Datim password view_name Datim SQLView name dataset Return SQLView dataset uid? Default false datauid Data UID query SQLView Query params, list containing type params key value pairs baseurl Datim API Base URL","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_sqlviews.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query Datim SQLViews — datim_sqlviews","text":"SQLView uid dataset data frame","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_sqlviews.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Query Datim SQLViews — datim_sqlviews","text":"function used identify Datim SQLView Extract Data","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/datim_sqlviews.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query Datim SQLViews — datim_sqlviews","text":"","code":"if (FALSE) { # \\dontrun{   library(grabr)    datim_sqlviews(     username =glamr::datim_user(),     password =glamr::datim_pwd(),     view_name = \"A list of OUs\",     dataset = TRUE   ) } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/est_export_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Establish Export Path — est_export_path","title":"Establish Export Path — est_export_path","text":"Establish Export Path","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/est_export_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Establish Export Path — est_export_path","text":"","code":"est_export_path(request_body, folderpath_dwnld, psd_type)"},{"path":"https://usaid-oha-si.github.io/grabr/reference/est_export_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Establish Export Path — est_export_path","text":"request_body elements pass PDAP Wave POST API folderpath_dwnld download, default = \"Data\" psd_type Type PEPFAR Structured dataset: \"psnu_im\" (default), \"ou_im\", \"site_im\"","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/est_export_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Establish Export Path — est_export_path","text":"vector filename","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/est_session.html","id":null,"dir":"Reference","previous_headings":"","what":"Establish PDAP Wave Session — est_session","title":"Establish PDAP Wave Session — est_session","text":"Establish PDAP Wave Session","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/est_session.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Establish PDAP Wave Session — est_session","text":"","code":"est_session(   username,   password,   datim_hostname = \"genie.testing.datim.org\",   api_host = \"wave.test.pdap.pepfar.net\" )"},{"path":"https://usaid-oha-si.github.io/grabr/reference/est_session.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Establish PDAP Wave Session — est_session","text":"username DATIM username, blank looks stored credentials (glamr::set_datim()) prompts credentials found password DATIM password, blank looks stored credentials (glamr::set_datim()) prompts credentials found datim_hostname DATIM URL: 'genie.testing.datim.org' api_host API address: 'wave.test.pdap.pepfar.net'","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/est_session.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Establish PDAP Wave Session — est_session","text":"session token","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/extract_cntry.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Country Name — extract_cntry","title":"Extract Country Name — extract_cntry","text":"Extract Country Name","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/extract_cntry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Country Name — extract_cntry","text":"","code":"extract_cntry(request_body)"},{"path":"https://usaid-oha-si.github.io/grabr/reference/extract_cntry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Country Name — extract_cntry","text":"request_body elements pass PDAP Wave POST API","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/extract_cntry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Country Name — extract_cntry","text":"vector country's name","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/extract_datim.html","id":null,"dir":"Reference","previous_headings":"","what":"DATIM Analytics API — extract_datim","title":"DATIM Analytics API — extract_datim","text":"DATIM Analytics API","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/extract_datim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DATIM Analytics API — extract_datim","text":"","code":"extract_datim(url, username, password)"},{"path":"https://usaid-oha-si.github.io/grabr/reference/extract_datim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DATIM Analytics API — extract_datim","text":"url supply url API call username DATIM Username, defaults using glamr::datim_user()` blank password DATIM password, defaults using glamr::datim_pwd()` blank","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/extract_datim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DATIM Analytics API — extract_datim","text":"API pull data DATIM","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/extract_datim.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"DATIM Analytics API — extract_datim","text":"Consider using glamr::datim_process_query()` /glamr::datim_execute_query()`","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/extract_datim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DATIM Analytics API — extract_datim","text":"","code":"if (FALSE) { # \\dontrun{  myurl <- paste0(baseurl, \"api/29/analytics.json?                  dimension=LxhLO68FcXm:udCop657yzi&                  dimension=ou:LEVEL-4;HfVjCurKxh2&                  filter=pe:2018Oct&                  displayProperty=SHORTNAME&outputIdScheme=CODE\")   df_targets <- extract_datim(myurl,glamr::datim_user(),glamr::datim_pwd())   } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/flattenbody.html","id":null,"dir":"Reference","previous_headings":"","what":"Flatten Body — flattenbody","title":"Flatten Body — flattenbody","text":"query can one value per name, take values contain vectors length >1 split . example list(x=1:2, y=\"\") becomes list(x=1, x=2, y=\"\"). code developed shard Derek Wood (GHSD/PRIME)","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/flattenbody.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flatten Body — flattenbody","text":"","code":"flattenbody(x)"},{"path":"https://usaid-oha-si.github.io/grabr/reference/flattenbody.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flatten Body — flattenbody","text":"x list","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/gen_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a API URL — gen_url","title":"Generate a API URL — gen_url","text":"Generate API URL","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/gen_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a API URL — gen_url","text":"","code":"gen_url(   ou_uid,   org_lvl,   org_type = \"facility\",   value_type = \"results\",   is_hts = FALSE,   fy_pd = NULL,   baseurl = \"https://final.datim.org/\" )"},{"path":"https://usaid-oha-si.github.io/grabr/reference/gen_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a API URL — gen_url","text":"ou_uid UID country, recommend using `identify_ouuids()` org_lvl org hierarchy level, eg facility level 7 country X, recommend using `identify_levels()` org_type organization type, either facility (default) community value_type results (default) targets is_hts API HTS indicators (HTS_TST HTS_TST_POS), default = FALSE fy_pd fiscal year(s) cover, default current FY provided baseurl API base url, default = https://final.datim.org/","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/gen_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a API URL — gen_url","text":"","code":"if (FALSE) { # \\dontrun{  #get OU UID   ouuid <- identify_ouuids() %>% dplyr::filter(ou == \"Ghana\")  #get facility level   faclvl <- identify_levels(\"facility\",                             username = myuser, password = mypwd()) %>%                             dplyr::filter(ou == \"Ghana\")  #gen url   myurl <- gen_url(ouuid, faclvl, org_type = facility) } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_baseurl.html","id":null,"dir":"Reference","previous_headings":"","what":"Get base url from a link — get_baseurl","title":"Get base url from a link — get_baseurl","text":"Get base url link","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_baseurl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get base url from a link — get_baseurl","text":"","code":"get_baseurl(url)"},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_baseurl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get base url from a link — get_baseurl","text":"url DATIM API end points","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_baseurl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get base url from a link — get_baseurl","text":"Base url without trailing slash","code":""},{"path":[]},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_datim_data.html","id":null,"dir":"Reference","previous_headings":"","what":"DATIM API Call for Targets — get_datim_data","title":"DATIM API Call for Targets — get_datim_data","text":"DATIM API Call Targets","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_datim_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DATIM API Call for Targets — get_datim_data","text":"","code":"get_datim_data(url, username, password)"},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_datim_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DATIM API Call for Targets — get_datim_data","text":"url supply url forAPI call, recommend using `gen_url()` username DATIM username password DATIM password, recommend using `mypwd()`","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_datim_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DATIM API Call for Targets — get_datim_data","text":"","code":"if (FALSE) { # \\dontrun{  myurl <- paste0(baseurl, \"api/29/analytics.json?                  dimension=LxhLO68FcXm:udCop657yzi&                  dimension=ou:LEVEL-4;HfVjCurKxh2&                  filter=pe:2018Oct&                  displayProperty=SHORTNAME&outputIdScheme=CODE\")  myuser <- \"UserX\"  df_datim <- get_datim_data(myurl, myuser, mypwd(myuser)) } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_datim_targets.html","id":null,"dir":"Reference","previous_headings":"","what":"DATIM API Call for Targets — get_datim_targets","title":"DATIM API Call for Targets — get_datim_targets","text":"DATIM API Call Targets","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_datim_targets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DATIM API Call for Targets — get_datim_targets","text":"","code":"get_datim_targets(url, username, password)"},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_datim_targets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DATIM API Call for Targets — get_datim_targets","text":"url supply url forAPI call, recommend using`gen_url()` username DATIM username password DATIM password, recommend using `mypwd()`","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_datim_targets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DATIM API Call for Targets — get_datim_targets","text":"","code":"if (FALSE) { # \\dontrun{  myurl <- paste0(baseurl, \"api/29/analytics.json?                  dimension=LxhLO68FcXm:udCop657yzi&                  dimension=ou:LEVEL-4;HfVjCurKxh2&                  filter=pe:2018Oct&                  displayProperty=SHORTNAME&outputIdScheme=CODE\")  myuser <- \"UserX\"  df_targets <- get_datim_targets(myurl, myuser, mypwd(myuser)) } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all orgunits levels in org hierarchy — get_levels","title":"Get all orgunits levels in org hierarchy — get_levels","text":"Get orgunits levels org hierarchy","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all orgunits levels in org hierarchy — get_levels","text":"","code":"get_levels(   username,   password,   expand = FALSE,   reshape = FALSE,   baseurl = \"https://final.datim.org/\" )"},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all orgunits levels in org hierarchy — get_levels","text":"username DATIM username, recommed using glamr::datim_user()` password DATIM password, recommend using glamr::datim_pwd()` expand Fill missing snu1 level? default FALSE reshape Reshape data long? default FALSE baseurl base API url, default = https://final.datim.org/","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all orgunits levels in org hierarchy — get_levels","text":"df","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_levels.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get all orgunits levels in org hierarchy — get_levels","text":"Similar `grabr::identify_levels()` `grabr::get_outable()`","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_levels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all orgunits levels in org hierarchy — get_levels","text":"","code":"if (FALSE) { # \\dontrun{   library(grabr)    # Get PEPFAR Org Levels   get_levels()  } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_orguids.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Org UIDS — get_orguids","title":"Get Org UIDS — get_orguids","text":"Get Org UIDS","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_orguids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Org UIDS — get_orguids","text":"","code":"get_orguids(   level = 3,   username,   password,   baseurl = \"https://final.datim.org/\" )"},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_orguids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Org UIDS — get_orguids","text":"level Org level username DATIM Username, recommend using glamr::datim_user()` password DATIM password, recommend using glamr::datim_pwd()` baseurl base url API, default = https://final.datim.org/","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_orguids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Org UIDS — get_orguids","text":"ORG UIDS tibble","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_orguids.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get Org UIDS — get_orguids","text":"Use caution. Use `get_ouorguids()` levels 3","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_orguids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Org UIDS — get_orguids","text":"","code":"if (FALSE) { # \\dontrun{  library(grabr)   # All orgunit level 3 uids + names  orgs <- get_orguids(level = 3) } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_ouorglabel.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify OU/Org Label — get_ouorglabel","title":"Identify OU/Org Label — get_ouorglabel","text":"Identify OU/Org Label","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_ouorglabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify OU/Org Label — get_ouorglabel","text":"","code":"get_ouorglabel(   operatingunit,   country = NULL,   org_level = 4,   username,   password,   baseurl = \"https://final.datim.org/\" )"},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_ouorglabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify OU/Org Label — get_ouorglabel","text":"operatingunit Operating unit country Country name org_level OU Org level, default set 4, PSNU username Datim account username password Datim account password baseurl Datim base url","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_ouorglabel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify OU/Org Label — get_ouorglabel","text":"Org level label","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_ouorglabel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify OU/Org Label — get_ouorglabel","text":"","code":"if (FALSE) { # \\dontrun{   library(grabr)    get_ouorglabel(operatingunit = \"Zambia\", org_level = 5) } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_ouorglevel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get OU Org level — get_ouorglevel","title":"Get OU Org level — get_ouorglevel","text":"Get OU Org level","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_ouorglevel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get OU Org level — get_ouorglevel","text":"","code":"get_ouorglevel(   operatingunit,   country = NULL,   org_type = \"prioritization\",   username,   password,   baseurl = \"https://final.datim.org/\" )"},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_ouorglevel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get OU Org level — get_ouorglevel","text":"operatingunit Operatingunit name country Country name (default = Operatingunit) org_type Orgunit type (country_lvl, prioritization, community, facility_lvl) username Datim Account username password Datim Account Password baseurl Datim Base URL","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_ouorglevel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get OU Org level — get_ouorglevel","text":"uid","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_ouorglevel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get OU Org level — get_ouorglevel","text":"","code":"if (FALSE) { # \\dontrun{  library(grabr)   cntry <- \"Zambia\"   # Get country org level  get_ouorglevel(cntry)   # Get community org level  get_ouorglevel(cntry, org_type = \"community\") } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_ouorgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get list of OU Orgs at specific level — get_ouorgs","title":"Get list of OU Orgs at specific level — get_ouorgs","text":"Get list OU Orgs specific level","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_ouorgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get list of OU Orgs at specific level — get_ouorgs","text":"","code":"get_ouorgs(   ouuid,   level = 4,   username,   password,   baseurl = \"https://final.datim.org/\" )"},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_ouorgs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get list of OU Orgs at specific level — get_ouorgs","text":"ouuid OU uid level org level username DATIM Username password DATIM password, recommend using `mypwd()` baseurl base url API, default = https://final.datim.org/","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_ouorgs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get list of OU Orgs at specific level — get_ouorgs","text":"ORG UIDS tibble","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_ouorgs.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get list of OU Orgs at specific level — get_ouorgs","text":"Use `get_orguids()` levels 4","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_ouorgs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get list of OU Orgs at specific level — get_ouorgs","text":"","code":"if (FALSE) { # \\dontrun{   library(grabr)   cntry <- \"Zambia\"   uid <- get_ouuid(cntry)   lvl <- get_ouorglevel(cntry, org_type = \"prioritization\")   orgs <- get_ouorgs(ouuid = uid, level = lvl) } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_ouorguids.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Orgs uids by level — get_ouorguids","title":"Get Orgs uids by level — get_ouorguids","text":"Get Orgs uids level","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_ouorguids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Orgs uids by level — get_ouorguids","text":"","code":"get_ouorguids(   ouuid,   level,   username,   password,   baseurl = \"https://final.datim.org/\" )"},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_ouorguids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Orgs uids by level — get_ouorguids","text":"ouuid Operatingunit uid level Orgunit level username Datim Account username password Datim Account Password baseurl Datim base url","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_ouorguids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Orgs uids by level — get_ouorguids","text":"list uids","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_ouorguids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Orgs uids by level — get_ouorguids","text":"","code":"if (FALSE) { # \\dontrun{  library(grabr)   # Set country of interest  cntry <- \"Zambia\"   # Get OU/Country orgunit uid  uid <- get_ouuid(cntry)   # Get org level for psnu  lvl <- get_ouorglevel(cntry, org_type = \"prioritization\")   # Retreived all uids for level 4 (SNU1)  get_ouorguids(ouuid = uid, level = 4) } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_outable.html","id":null,"dir":"Reference","previous_headings":"","what":"Pull Table of OUs/Countries, UIDs, ISO codes and levels — get_outable","title":"Pull Table of OUs/Countries, UIDs, ISO codes and levels — get_outable","text":"`get_outable` pulls DATIM return dataframe PEPFAR Operating Units countries along useful information merging, eg ISO codes, use DATIM APIs, eg UIDs hierarchy levels.","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_outable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pull Table of OUs/Countries, UIDs, ISO codes and levels — get_outable","text":"","code":"get_outable(username, password, baseurl = \"https://final.datim.org/\")"},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_outable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pull Table of OUs/Countries, UIDs, ISO codes and levels — get_outable","text":"username DATIM Username, defaults using glamr::datim_user()` blank password DATIM password, defaults using glamr::datim_pwd()` blank baseurl base url API, default = https://final.datim.org/","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_outable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pull Table of OUs/Countries, UIDs, ISO codes and levels — get_outable","text":"data frame PEPFAR OUs, countries, UIDs, ISO codes   different levels DATIM hierarchy","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_outable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pull Table of OUs/Countries, UIDs, ISO codes and levels — get_outable","text":"`get_outtable` wrapper around `identify_ouuids` `identify_levels` pulls information directly DATIM. user need DATIM account access data. can take advantage storing credentials locally secure way using `set_datim`.","code":""},{"path":[]},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_outable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pull Table of OUs/Countries, UIDs, ISO codes and levels — get_outable","text":"","code":"if (FALSE) { # \\dontrun{  load_secrets()  ou_table <- datim_outable() } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_ouuid.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Operatingunit / Country Org UID — get_ouuid","title":"Get Operatingunit / Country Org UID — get_ouuid","text":"Get Operatingunit / Country Org UID","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_ouuid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Operatingunit / Country Org UID — get_ouuid","text":"","code":"get_ouuid(   operatingunit,   username,   password,   baseurl = \"https://final.datim.org/\" )"},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_ouuid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Operatingunit / Country Org UID — get_ouuid","text":"operatingunit Operatingunit name username Datim Account username, recommend using glamr::datim_user()` password Datim Account Password, recommend using glamr::datim_pwd()` baseurl base url API, default = https://final.datim.org/","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_ouuid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Operatingunit / Country Org UID — get_ouuid","text":"uid","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_ouuid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Operatingunit / Country Org UID — get_ouuid","text":"","code":"if (FALSE) { # \\dontrun{   library(grabr)    # get orgunit for specific OU/Country: kenya   get_ouuid(operatingunit = \"Kenya\") } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_ouuids.html","id":null,"dir":"Reference","previous_headings":"","what":"Get OU Org UIDS — get_ouuids","title":"Get OU Org UIDS — get_ouuids","text":"Get OU Org UIDS","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_ouuids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get OU Org UIDS — get_ouuids","text":"","code":"get_ouuids(   add_details = FALSE,   username,   password,   baseurl = \"https://final.datim.org/\" )"},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_ouuids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get OU Org UIDS — get_ouuids","text":"add_details Add countries regional ou, default false username DATIM Username, recommend using glamr::datim_user()` password DATIM password, recommend using glamr::datim_pwd()` baseurl base url API, default = https://final.datim.org/","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_ouuids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get OU Org UIDS — get_ouuids","text":"OU UIDS tibble","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/get_ouuids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get OU Org UIDS — get_ouuids","text":"","code":"if (FALSE) { # \\dontrun{  library(grabr)   # OU Org UIDs  ous <- get_ouuids() } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/grabr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"grabr: OHA/SI APIs Package — grabr-package","title":"grabr: OHA/SI APIs Package — grabr-package","text":"Provides series base functions useful GH OHA SI team. function extend utility functions glamr, focusing primarily API utility functions.","code":""},{"path":[]},{"path":"https://usaid-oha-si.github.io/grabr/reference/grabr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"grabr: OHA/SI APIs Package — grabr-package","text":"Maintainer: Aaron Chafetz achafetz@usaid.gov Authors: Tim Essam tessam@usaid.gov Baboyma Kagniniwa bkagniniwa@usaid.gov","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/hierarchy_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean up DATIM Hierarchy Path — hierarchy_clean","title":"Clean up DATIM Hierarchy Path — hierarchy_clean","text":"Internal function Clean Hierarchy","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/hierarchy_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean up DATIM Hierarchy Path — hierarchy_clean","text":"","code":"hierarchy_clean(df)"},{"path":"https://usaid-oha-si.github.io/grabr/reference/hierarchy_clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean up DATIM Hierarchy Path — hierarchy_clean","text":"df data frame created hierarchy_extract()","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/hierarchy_clean.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Clean up DATIM Hierarchy Path — hierarchy_clean","text":"Migratated Wavelength","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/hierarchy_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Pull Hierarchy Data from DATIM — hierarchy_extract","title":"Pull Hierarchy Data from DATIM — hierarchy_extract","text":"internal funciton extract orgunit hierarchy","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/hierarchy_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pull Hierarchy Data from DATIM — hierarchy_extract","text":"","code":"hierarchy_extract(   ou_uid,   username,   password,   add_geom = FALSE,   baseurl = \"https://final.datim.org/\" )"},{"path":"https://usaid-oha-si.github.io/grabr/reference/hierarchy_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pull Hierarchy Data from DATIM — hierarchy_extract","text":"ou_uid UID country, recommend using identify_ouuids username DATIM username, recommend using datim_user password DATIM password, recommend using datim_pwd add_geom Add geometry column output, default false baseurl API base url, default = https://final.datim.org/","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/hierarchy_extract.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Pull Hierarchy Data from DATIM — hierarchy_extract","text":"Migratated Wavelength","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/hierarchy_extract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pull Hierarchy Data from DATIM — hierarchy_extract","text":"","code":"if (FALSE) { # \\dontrun{ #get OU UID   ouuid <- identify_ouuids() %>% dplyr::filter(ou == \"Kenya\") #pull hierarchy (paths are all UIDs)   df <- hierarchy_extract(ouuid, username = myuser, password = datim_pwd(myuser))   } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/hierarchy_identify_ctry.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract country name from OU or country name — hierarchy_identify_ctry","title":"Extract country name from OU or country name — hierarchy_identify_ctry","text":"Extract country name OU country name","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/hierarchy_identify_ctry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract country name from OU or country name — hierarchy_identify_ctry","text":"","code":"hierarchy_identify_ctry(df)"},{"path":"https://usaid-oha-si.github.io/grabr/reference/hierarchy_identify_ctry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract country name from OU or country name — hierarchy_identify_ctry","text":"df data frame","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/hierarchy_identify_ctry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract country name from OU or country name — hierarchy_identify_ctry","text":"Unique country names","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/hierarchy_rename.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename Hierarchy — hierarchy_rename","title":"Rename Hierarchy — hierarchy_rename","text":"Internal function Rename Hierarchy","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/hierarchy_rename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename Hierarchy — hierarchy_rename","text":"","code":"hierarchy_rename(   df,   country,   username,   password,   baseurl = \"https://final.datim.org/\" )"},{"path":"https://usaid-oha-si.github.io/grabr/reference/hierarchy_rename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename Hierarchy — hierarchy_rename","text":"df data frame created hierarchy_extract hierarchy_clean country county name, eg \"Malawi\" \"Nepal\" username DATIM username, recommend using datim_user password DATIM password, recommend using datim_pwd baseurl API base url, default = https://final.datim.org/","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/hierarchy_rename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename Hierarchy — hierarchy_rename","text":"Cleaned/Renamed data","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/hierarchy_rename.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Rename Hierarchy — hierarchy_rename","text":"Rename Levels OU/SNU1/PSNU/Facility","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/identify_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify Facility/Community levels in org hierarchy — identify_levels","title":"Identify Facility/Community levels in org hierarchy — identify_levels","text":"`identify_levels` pulls DATIM return dataframe PEPFAR Operating Units countries ISO codes hierarhcy levels. one two components feeds `get_outable`.","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/identify_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify Facility/Community levels in org hierarchy — identify_levels","text":"","code":"identify_levels(username, password, baseurl = \"https://final.datim.org/\")"},{"path":"https://usaid-oha-si.github.io/grabr/reference/identify_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify Facility/Community levels in org hierarchy — identify_levels","text":"username DATIM Username, defaults using glamr::datim_user()` blank password DATIM password, defaults using glamr::datim_pwd()` blank baseurl base url API, default = https://final.datim.org/","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/identify_levels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify Facility/Community levels in org hierarchy — identify_levels","text":"access UIDs, user need DATIM account. can take advantage storing credentials locally secure way using `set_datim`.","code":""},{"path":[]},{"path":"https://usaid-oha-si.github.io/grabr/reference/identify_levels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify Facility/Community levels in org hierarchy — identify_levels","text":"","code":"if (FALSE) { # \\dontrun{  #table for all OUs   load_secrets()   identify_levels() } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/identify_ouuids.html","id":null,"dir":"Reference","previous_headings":"","what":"Pull OU UIDS — identify_ouuids","title":"Pull OU UIDS — identify_ouuids","text":"`identify_ouuids` pulls DATIM return dataframe PEPFAR Operating Units countries UIDs. one two components feeds `get_outable`.","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/identify_ouuids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pull OU UIDS — identify_ouuids","text":"","code":"identify_ouuids(username, password, baseurl = \"https://final.datim.org/\")"},{"path":"https://usaid-oha-si.github.io/grabr/reference/identify_ouuids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pull OU UIDS — identify_ouuids","text":"username DATIM Username, defaults using glamr::datim_user()` blank password DATIM password, defaults using glamr::datim_pwd()` blank baseurl base url API, default = https://final.datim.org/","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/identify_ouuids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pull OU UIDS — identify_ouuids","text":"Datim country names","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/identify_ouuids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pull OU UIDS — identify_ouuids","text":"access UIDs, user need DATIM account. can take advantage storing credentials locally secure way using `set_datim`.","code":""},{"path":[]},{"path":"https://usaid-oha-si.github.io/grabr/reference/identify_ouuids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pull OU UIDS — identify_ouuids","text":"","code":"if (FALSE) { # \\dontrun{  load_secrets()  ous <- identify_ouuids() } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/lazy_secrets.html","id":null,"dir":"Reference","previous_headings":"","what":"Lazy checking/loading of credentials — lazy_secrets","title":"Lazy checking/loading of credentials — lazy_secrets","text":"function useful within another function. check whether username password provided user , , checks stored via `glamr` prompts user provide credentials interactive prompt.","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/lazy_secrets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lazy checking/loading of credentials — lazy_secrets","text":"","code":"lazy_secrets(service = c(\"datim\", \"pano\", \"pdap\", \"s3\"), username, password)"},{"path":"https://usaid-oha-si.github.io/grabr/reference/lazy_secrets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lazy checking/loading of credentials — lazy_secrets","text":"service account, either datim\", \"pano\", \"pdap\", \"s3\" username account username s3 access key password account password s3 secret key","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/lazy_secrets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lazy checking/loading of credentials — lazy_secrets","text":"returns list 2 - username/access password/secret","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/lazy_secrets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lazy checking/loading of credentials — lazy_secrets","text":"","code":"if (FALSE) { # \\dontrun{   accnt <- lazy_secrets(\"datim\", username = username, password = password)   datim_dimensions(accnt$username, accnt$password) } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/package_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if package exists — package_check","title":"Check if package exists — package_check","text":"Check package exists","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/package_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if package exists — package_check","text":"","code":"package_check(pkg)"},{"path":"https://usaid-oha-si.github.io/grabr/reference/package_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if package exists — package_check","text":"pkg package name","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Read html content from web page — pano_content","title":"Read html content from web page — pano_content","text":"Read html content web page","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read html content from web page — pano_content","text":"","code":"pano_content(page_url, session)"},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read html content from web page — pano_content","text":"page_url URL page extracted session Valid active login session","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read html content from web page — pano_content","text":"html content","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_content.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read html content from web page — pano_content","text":"","code":"if (FALSE) { # \\dontrun{   library(grabr)    s <- pano_session(\"<my-pano-user>\", \"<my-password>\")   url <- \"https://pepfar-panorama.org/forms/downloads\"    cont <- pano_content(page_url = url, session = s) } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download file from PEPFAR Panorama — pano_download","title":"Download file from PEPFAR Panorama — pano_download","text":"Download file PEPFAR Panorama","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download file from PEPFAR Panorama — pano_download","text":"","code":"pano_download(   item_url,   username,   password,   session = NULL,   dest_path = NULL,   uncompress = FALSE )"},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download file from PEPFAR Panorama — pano_download","text":"item_url URL item downlaoded username Username PEPFAR Panorama Account. Recommend using `pano_user()` password Password PEPFAR Panorama Account. Recommend using `pano_pwd()` session Login session, used within `pano_extract_*()` dest_path Location name destination file uncompress yes, downloaded zip file decompressed. Default FALSE","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download file from PEPFAR Panorama — pano_download","text":"file content binary","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download file from PEPFAR Panorama — pano_download","text":"","code":"if (FALSE) { # \\dontrun{   library(tidyverse)   library(grabr)   library(glamr)    url <- \"https://pepfar-panorama.org/forms/downloads\"    elts <- pano_items(page_html = url,                      username = pano_user(), password = pano_pwd())    f_url <- elts %>% filter(type == \"file zipfile\") %>% pull(path) %>% first()    pano_download(item_url = url, session = s, dest = \"Data\") } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract data elements details from html content — pano_elements","title":"Extract data elements details from html content — pano_elements","text":"Extract data elements details html content","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract data elements details from html content — pano_elements","text":"","code":"pano_elements(page_html, page_url = NULL)"},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract data elements details from html content — pano_elements","text":"page_html html content page_url Curretn html page url","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_elements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract data elements details from html content — pano_elements","text":"html element","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_elements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract data elements details from html content — pano_elements","text":"","code":"if (FALSE) { # \\dontrun{   library(grabr)    s <- pano_session(\"<my-pano-user>\", \"<my-password>\")   url <- \"https://pepfar-panorama.org/forms/downloads\"    cont <- pano_content(page_url = url, session = s)    elts <- pano_elements(page_html = cont, page_url = url) } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract data outputs from Panorama — pano_extract","title":"Extract data outputs from Panorama — pano_extract","text":"Extract data outputs Panorama","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract data outputs from Panorama — pano_extract","text":"","code":"pano_extract(   item = \"mer\",   version,   fiscal_year,   quarter,   unpack = FALSE,   username,   password,   session = NULL,   baseurl = \"https://pepfar-panorama.org\" )"},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract data outputs from Panorama — pano_extract","text":"item Panorama data type. Eg: mer, financial, sims, narratives version Data release version: Initial Clean, defaults current version blank fiscal_year Reporting Fiscal year, defaults current FY blank quarter Reporting Quarter, defaults current quarter blank unpack TRUE, unpack nested directories username Panorama username, recommend using `glamr::pano_user()` password Panorama password, recommend using `glamr::pano_pwd()` session Login session, used within `pano_extract_*()` baseurl Panorama base url","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract data outputs from Panorama — pano_extract","text":"list output files data frame","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_extract.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Extract data outputs from Panorama — pano_extract","text":"function combines `pano_session()`, `pano_content()`, `pano_elements()`, cases `pano_unpack()`","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_extract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract data outputs from Panorama — pano_extract","text":"","code":"if (FALSE) { # \\dontrun{   library(tidyverse)   library(grabr)    pano_extract(item = \"mer\") } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_extract_msd.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads Country Specific MSDs — pano_extract_msd","title":"Downloads Country Specific MSDs — pano_extract_msd","text":"Downloads Country Specific MSDs","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_extract_msd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads Country Specific MSDs — pano_extract_msd","text":"","code":"pano_extract_msd(   operatingunit = NULL,   version,   fiscal_year,   quarter,   level = c(\"psnu\", \"ou\", \"site\", \"nat\"),   dest_path,   username,   password,   baseurl = \"https://pepfar-panorama.org\" )"},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_extract_msd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downloads Country Specific MSDs — pano_extract_msd","text":"operatingunit PEPFAR Operating Unit. Default set NULL return global datasets version Data release version: \"initial\" \"clean\", defaults current version fiscal_year Reporting Fiscal year, defaults current version quarter Reporting Quarter: Single digit quarters, defaults current version level Org level, options psnu\" (default), \"ou\", \"site\", \"nat\" dest_path Directory path download file. Default set `si_path()` username Panorama username, recommend using `glamr::pano_user()`, default left blank password Panorama password, recommend using `glamr::pano_pwd()`, default left blank baseurl Pano base url","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_extract_msd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downloads Country Specific MSDs — pano_extract_msd","text":"","code":"if (FALSE) { # \\dontrun{  pano_extract_msd(operatingunit = \"Zambia\", level = \"site\") } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_extract_msds.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads All Global + OU Specific MSDs — pano_extract_msds","title":"Downloads All Global + OU Specific MSDs — pano_extract_msds","text":"Downloads Global + OU Specific MSDs","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_extract_msds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads All Global + OU Specific MSDs — pano_extract_msds","text":"","code":"pano_extract_msds(   operatingunit,   add_global = TRUE,   items = \"mer\",   archive = FALSE,   dest_path,   username,   password,   baseurl = \"https://pepfar-panorama.org\" )"},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_extract_msds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downloads All Global + OU Specific MSDs — pano_extract_msds","text":"operatingunit PEPFAR Operating Unit. Default set NULL global datasets add_global Add global datasets extract? Default TRUE items Panorama data set, default option `mer` archive Logical, old files archived? default=FALSE dest_path Directory path download file. Default set `glamr::si_path()` username Panorama username, recommend using `glamr::pano_user()` password Panorama password, recommend using `glamr::pano_pwd()` baseurl Panorama base url, default=\"https://pepfar-panorama.org\"","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_extract_msds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downloads All Global + OU Specific MSDs — pano_extract_msds","text":"","code":"if (FALSE) { # \\dontrun{  dir_mer <- si_path()   pano_extract_msds(operatingunit = \"Zambia\",                    archive = TRUE,                    dest_path = dir_mer) } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_items.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract data items from url — pano_items","title":"Extract data items from url — pano_items","text":"Extract data items url","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_items.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract data items from url — pano_items","text":"","code":"pano_items(page_url, username, password, session = NULL)"},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_items.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract data items from url — pano_items","text":"page_url Current html page url username Username PEPFAR Panorama Account. Recommend using `pano_user()` password Password PEPFAR Panorama Account. Recommend using `pano_pwd()` session Login session, used within `pano_extract_*()`","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_items.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract data items from url — pano_items","text":"data items data frame","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_items.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract data items from url — pano_items","text":"","code":"if (FALSE) { # \\dontrun{   library(grabr)    s <- pano_session(\"<my-pano-user>\", \"<my-password>\")   url <- \"https://pepfar-panorama.org/forms/downloads\"    items <- pano_items(page_url = url, session = s) } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_session.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an active session for PEPFAR Panorama — pano_session","title":"Create an active session for PEPFAR Panorama — pano_session","text":"Create active session PEPFAR Panorama","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_session.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an active session for PEPFAR Panorama — pano_session","text":"","code":"pano_session(username, password, baseurl = \"https://pepfar-panorama.org\")"},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_session.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an active session for PEPFAR Panorama — pano_session","text":"username Username PEPFAR Panorama Account. Recommend using `pano_user()` password Password PEPFAR Panorama Account. Recommend using `pano_pwd()` baseurl PEPFAR Panorama base url","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_session.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an active session for PEPFAR Panorama — pano_session","text":"login session","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_session.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an active session for PEPFAR Panorama — pano_session","text":"","code":"if (FALSE) { # \\dontrun{   library(grabr)    s <- pano_session(\"<my-pano-user>\", \"<my-password>\") } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_unpack.html","id":null,"dir":"Reference","previous_headings":"","what":"Unpack Pano files directories — pano_unpack","title":"Unpack Pano files directories — pano_unpack","text":"Unpack Pano files directories","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_unpack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unpack Pano files directories — pano_unpack","text":"","code":"pano_unpack(df_pano, session)"},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_unpack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unpack Pano files directories — pano_unpack","text":"df_pano Panorama output files items session Valid active login session","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_unpack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unpack Pano files directories — pano_unpack","text":"unnested data frame containing output files","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pano_unpack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unpack Pano files directories — pano_unpack","text":"","code":"if (FALSE) { # \\dontrun{   library(tidyverse)   library(grabr)    s <- pano_session(\"<my-pano-user>\", \"<my-password>\")   url <- \"https://pepfar-panorama.org/forms/downloads\"    cont <- pano_content(page_url = url, session = s)    elts <- pano_elements(page_html = cont, page_url = url)    pano_unpack(df_pano = elts, session = s) } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://usaid-oha-si.github.io/grabr/reference/pull_mech.html","id":null,"dir":"Reference","previous_headings":"","what":"Pull Partner/Mechanism Info from DATIM — pull_mech","title":"Pull Partner/Mechanism Info from DATIM — pull_mech","text":"Pull Partner/Mechanism Info DATIM","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pull_mech.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pull Partner/Mechanism Info from DATIM — pull_mech","text":"","code":"pull_mech(usaid_only = TRUE, ou_sel = NULL, folderpath_output = NULL)"},{"path":"https://usaid-oha-si.github.io/grabr/reference/pull_mech.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pull Partner/Mechanism Info from DATIM — pull_mech","text":"usaid_only specify USAID mechansism returned, default = TRUE ou_sel option specify operating unit, default = NULL folderpath_output provide full path folder saving","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pull_mech.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pull Partner/Mechanism Info from DATIM — pull_mech","text":"","code":"if (FALSE) { # \\dontrun{ #pull mechanism/partner information df <- pull_mech() } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/pull_mer.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract DATIM Results and Targets (DATIM API Call) — pull_mer","title":"Extract DATIM Results and Targets (DATIM API Call) — pull_mer","text":"Extract DATIM Results Targets (DATIM API Call)","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pull_mer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract DATIM Results and Targets (DATIM API Call) — pull_mer","text":"","code":"pull_mer(   ou_name = NULL,   username,   password,   baseurl = \"https://final.datim.org/\",   fy_pd = NULL,   quarters_complete = NULL,   folderpath_output = NULL )"},{"path":"https://usaid-oha-si.github.io/grabr/reference/pull_mer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract DATIM Results and Targets (DATIM API Call) — pull_mer","text":"ou_name Operating Unit name, mechanism specified username DATIM username password DATIM password, recommend using `mypwd()` baseurl API base url, default = https://final.datim.org/ fy_pd fiscal year(s) cover, default current FY provided quarters_complete . quarters completed FY determine weeks left year folderpath_output folder path store DATIM output, default = NULL","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/pull_mer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract DATIM Results and Targets (DATIM API Call) — pull_mer","text":"","code":"if (FALSE) { # \\dontrun{  #ou mer data  myuser <- \"UserX\"  mech_x_dta <- pull_mer(ou_name = \"Namibia\", username = myuser, password = mypwd(myuser))  } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_buckets.html","id":null,"dir":"Reference","previous_headings":"","what":"Get S3 Buckets list — s3_buckets","title":"Get S3 Buckets list — s3_buckets","text":"Get S3 Buckets list","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_buckets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get S3 Buckets list — s3_buckets","text":"","code":"s3_buckets(access_key, secret_key, ...)"},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_buckets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get S3 Buckets list — s3_buckets","text":"access_key S3 Access Key ID secret_key S3 Secret Access Key ... Additional arguments passed s3HTTP","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_buckets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get S3 Buckets list — s3_buckets","text":"S3 Backets list tibble","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_buckets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get S3 Buckets list — s3_buckets","text":"","code":"if (FALSE) { # \\dontrun{ s3_buckets() } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download S3 Objects — s3_download","title":"Download S3 Objects — s3_download","text":"Download S3 Objects","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download S3 Objects — s3_download","text":"","code":"s3_download(bucket, object, filepath = NULL, access_key, secret_key, ...)"},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download S3 Objects — s3_download","text":"bucket S3 Bucket name object S3 Object key (id) filepath Full path destination file access_key S3 Access key id secret_key S3 Secret Access key ... Additional aws.S3::save_object() options","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download S3 Objects — s3_download","text":"file name","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download S3 Objects — s3_download","text":"","code":"if (FALSE) { # \\dontrun{ s3_objects(\"sample-bucket\") %>%   filter(str_detect(key, \"^HFR\")) %>%   pull(key) %>%   first() %>%   s3_download()} # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_excel_sheets.html","id":null,"dir":"Reference","previous_headings":"","what":"Read sheets from S3 Objects / Excel — s3_excel_sheets","title":"Read sheets from S3 Objects / Excel — s3_excel_sheets","text":"Read sheets S3 Objects / Excel","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_excel_sheets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read sheets from S3 Objects / Excel — s3_excel_sheets","text":"","code":"s3_excel_sheets(bucket, object_key, access_key, secret_key)"},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_excel_sheets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read sheets from S3 Objects / Excel — s3_excel_sheets","text":"bucket S3 Bucket object_key S3 Object Key access_key S3 Access Key secret_key S3 Secret Key","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_excel_sheets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read sheets from S3 Objects / Excel — s3_excel_sheets","text":"Excel sheets data frame","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_excel_sheets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read sheets from S3 Objects / Excel — s3_excel_sheets","text":"","code":"if (FALSE) { # \\dontrun{ s3_objects(     bucket = \"sample-bucket\",     prefix = \"ddc/xyz/ABC\") %>%   filter(str_detect(key, \"^HFR\")) %>%   pull(key) %>%   first() %>%   s3_excel_sheets(bucket = \"<sample-bucket>\", object_key = .)} # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_object_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Idenfity S3 Object type — s3_object_type","title":"Idenfity S3 Object type — s3_object_type","text":"Idenfity S3 Object type","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_object_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Idenfity S3 Object type — s3_object_type","text":"","code":"s3_object_type(object)"},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_object_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Idenfity S3 Object type — s3_object_type","text":"object S3 Object key","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_object_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Idenfity S3 Object type — s3_object_type","text":"file type: text, csv, excel, json, python, shell","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_object_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Idenfity S3 Object type — s3_object_type","text":"","code":"if (FALSE) { # \\dontrun{ s3_objects(\"sample-bucket\") %>%   filter(str_detect(key, \"^HFR\")) %>%   pull(key) %>%   first() %>%   s3_object_type()} # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_objects.html","id":null,"dir":"Reference","previous_headings":"","what":"Get S3 Bucket objects list — s3_objects","title":"Get S3 Bucket objects list — s3_objects","text":"Get S3 Bucket objects list","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_objects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get S3 Bucket objects list — s3_objects","text":"","code":"s3_objects(   bucket,   prefix = NULL,   n = 1000,   unpack_keys = FALSE,   access_key,   secret_key,   ... )"},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_objects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get S3 Bucket objects list — s3_objects","text":"bucket S3 Bucket name prefix Limits response key. Default set NULL n Max number record, default = 1000 unpack_keys Separate key column, default false access_key S3 Access Key ID secret_key S3 Secret Access Key ... Additional aws.s3::get_bucket_df() options","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_objects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get S3 Bucket objects list — s3_objects","text":"S3 Objects list tibble","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_objects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get S3 Bucket objects list — s3_objects","text":"","code":"if (FALSE) { # \\dontrun{ s3_objects(\"sample-bucket\") } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_read_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Read content of S3 Objects — s3_read_object","title":"Read content of S3 Objects — s3_read_object","text":"Read content S3 Objects","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_read_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read content of S3 Objects — s3_read_object","text":"","code":"s3_read_object(bucket, object, sheet = NULL, access_key, secret_key, ...)"},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_read_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read content of S3 Objects — s3_read_object","text":"bucket S3 Bucket name object S3 Object key (id) sheet S3 Excel object sheet name / index access_key S3 Access key id secret_key S3 Secret Access key ... Additional arguments passed s3HTTP","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_read_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read content of S3 Objects — s3_read_object","text":"df","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_read_object.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read content of S3 Objects — s3_read_object","text":"","code":"if (FALSE) { # \\dontrun{ s3_objects(\"sample-bucket\") %>%   filter(str_detect(key, \"^HFR\")) %>%   pull(key) %>%   first() %>%   s3_read_object(bucket = \"sample-bucket\", object_key = .)} # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_remove.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove objects from S3 bucket — s3_remove","title":"Remove objects from S3 bucket — s3_remove","text":"Remove objects S3 bucket","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_remove.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove objects from S3 bucket — s3_remove","text":"","code":"s3_remove(objects, bucket, access_key, secret_key, ...)"},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_remove.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove objects from S3 bucket — s3_remove","text":"objects S3 object keys (full path) bucket S3 backet name access_key S3 Access Key secret_key S3 Secret Key ... Additional aws.S3::delete_object() options","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_remove.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove objects from S3 bucket — s3_remove","text":"boolean","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_remove.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove objects from S3 bucket — s3_remove","text":"","code":"if (FALSE) { # \\dontrun{ df_objects %>%   pull(key) %>%   first() %>%   s3_remove(objects = .,             bucket = \"test-bkt\")} # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_unpack_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Unpack Objects Key — s3_unpack_keys","title":"Unpack Objects Key — s3_unpack_keys","text":"Unpack Objects Key","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_unpack_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unpack Objects Key — s3_unpack_keys","text":"","code":"s3_unpack_keys(df_objects, rmv_sysfiles = TRUE, rmv_hidden = TRUE)"},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_unpack_keys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unpack Objects Key — s3_unpack_keys","text":"df_objects S3 objects df rmv_sysfiles Remove System object (logs, git folders, etc.)? rmv_hidden Remove Hidden objects (folders/files starting dot) ?","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_unpack_keys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unpack Objects Key — s3_unpack_keys","text":"S3 Cleaned Objects list tibble","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_unpack_keys.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unpack Objects Key — s3_unpack_keys","text":"","code":"if (FALSE) { # \\dontrun{ s3_objects(\"sample-bucket\") %>% s3_unpack_keys()} # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_upload.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload file to S3 Bucket — s3_upload","title":"Upload file to S3 Bucket — s3_upload","text":"Upload file S3 Bucket","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_upload.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload file to S3 Bucket — s3_upload","text":"","code":"s3_upload(   filepath,   bucket,   prefix = NULL,   object = NULL,   access_key,   secret_key,   ... )"},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_upload.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload file to S3 Bucket — s3_upload","text":"filepath Source file path bucket S3 backet name prefix S3 Prefix (folder structure). Default set NULL object Destination S3 object name (file extention) access_key S3 Access Key secret_key S3 Secret Key ... Additional aws.S3::put_object() options","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_upload.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload file to S3 Bucket — s3_upload","text":"boolean","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/s3_upload.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upload file to S3 Bucket — s3_upload","text":"","code":"if (FALSE) { # \\dontrun{ filepath %>% s3_upload(bucket = \"test-bkt\")} # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/var_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if variable exist — var_exists","title":"Check if variable exist — var_exists","text":"Check variable exist","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/var_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if variable exist — var_exists","text":"","code":"var_exists(df, var)"},{"path":"https://usaid-oha-si.github.io/grabr/reference/var_exists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if variable exist — var_exists","text":"df data frame check var quoted variable interest","code":""},{"path":[]},{"path":"https://usaid-oha-si.github.io/grabr/reference/var_exists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if variable exist — var_exists","text":"","code":"if (FALSE) { # \\dontrun{ var_exists(df, \"val\") } # }"},{"path":"https://usaid-oha-si.github.io/grabr/reference/wave_process_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Pull Genie Data from PDAP Wave — wave_process_query","title":"Pull Genie Data from PDAP Wave — wave_process_query","text":"function provides streamlined API access PDAP Wave data, successor DATIM Genie. PDAP Wave API simplifies requests previously needed made DATIM returns dataset back matches MSD structure. documentation can found https://wave.test.pdap.pepfar.net/api/docs#/.","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/wave_process_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pull Genie Data from PDAP Wave — wave_process_query","text":"","code":"wave_process_query(   request_body,   folderpath_dwnld = \"Data\",   psd_type = c(\"psnu_im\", \"ou_im\", \"site_im\"),   request_type = c(\"POST\", \"GET\"),   username,   password )"},{"path":"https://usaid-oha-si.github.io/grabr/reference/wave_process_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pull Genie Data from PDAP Wave — wave_process_query","text":"request_body elements pass PDAP Wave POST API folderpath_dwnld download, default = \"Data\" psd_type Type PEPFAR Structured dataset: \"psnu_im\" (default), \"ou_im\", \"site_im\" request_type API request type: \"POST\" (default) \"GET username DATIM username, blank looks stored credentials (glamr::set_datim()) prompts credentials found password DATIM password, blank looks stored credentials (glamr::set_datim()) prompts credentials found","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/wave_process_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pull Genie Data from PDAP Wave — wave_process_query","text":"list request stored data zip","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/wave_process_query.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pull Genie Data from PDAP Wave — wave_process_query","text":"Users must pass query filter list form request_body, matches manually Genie previously. can proceed either POST GET requests access PSNUxIM, OUxIM, SitexIM data. function adapted code developed shared Derek Wood (GHSD/PRIME).","code":""},{"path":"https://usaid-oha-si.github.io/grabr/reference/wave_process_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pull Genie Data from PDAP Wave — wave_process_query","text":"","code":"if (FALSE) { # \\dontrun{  library(tidyverse)  library(glamr)   #get country uid for API cntry_uid <- pepfar_country_list %>%  filter(country == \"Tanzania\") %>%  pull(country_uid)   #establish parameters to pass into POST API  post_body <- list(    daily_frozen='daily',    fiscal_year=list(2023, 2024),    funding_agency = list(\"USAID\"),    indicator=list(\"TX_CURR\",\"TX_ML\",\"TX_CURR_LAG2\", \"TX_NET_NEW\",\"TX_NEW\",                   \"TX_RTT\",\"PMTCT_STAT\", \"PMTCT_STAT_POS\", \"PMTCT_ART\"),    uid_hierarchy_list=list(str_glue('-|-|{cntry_uid}')))   #run POST API  wave_process_query(post_body)   #load data  df_wave <- return_latest(\"Data\") %>%     read_psd()     } # }"},{"path":"https://usaid-oha-si.github.io/grabr/news/index.html","id":"grabr-21","dir":"Changelog","previous_headings":"","what":"grabr 2.1","title":"grabr 2.1","text":"Address bug wave_process_query relating missing renamed objects [2024-05-30] Add functionality pull data PDAP Wave (new Genie API), wave_process_query [2024-05-10]","code":""},{"path":"https://usaid-oha-si.github.io/grabr/news/index.html","id":"grabr-20","dir":"Changelog","previous_headings":"","what":"grabr 2.0","title":"grabr 2.0","text":"Update lazy_secrets handle PDAP working PEPFAR Posit Workbench [2024-04-02] Resolving missing explicit references [2024-04-02] Add list global variables [2024-04-02]","code":""},{"path":"https://usaid-oha-si.github.io/grabr/news/index.html","id":"grabr-123","dir":"Changelog","previous_headings":"","what":"grabr 1.2.3","title":"grabr 1.2.3","text":"Adding new articles data look extraction Resolve bug pano_items still used session parameter affecting pano_extract upstread [2024-01-08] Change instructions install rOpenSci [2024-01-04] Exclude pano_session(), pano_content() pano_elements() form list function exported [2023-12-12] Update datim_* functions use datim_execute_query() uses tryCatch errors [2023-08-04] Add clean_orgunits() clean orgunits datim_orgunits() [2023-12-12] Add get_baseurl() clean urls remove trailing slashes [2023-08-04] Renamed pull_hierarchy() datim_pull_hierarchy() [2023-12-12] Copied pull_hierarchy(), pull_mech() pull_mer() along respective dependencies package [2023-08-04]","code":""},{"path":"https://usaid-oha-si.github.io/grabr/news/index.html","id":"grabr-110","dir":"Changelog","previous_headings":"","what":"grabr 1.1.0","title":"grabr 1.1.0","text":"Update datim_execute_query resolve new behavior urltools::url_encode started changing character spaces, unexpected change APIs [2022-06-22]","code":""},{"path":"https://usaid-oha-si.github.io/grabr/news/index.html","id":"grabr-101","dir":"Changelog","previous_headings":"","what":"grabr 1.0.1","title":"grabr 1.0.1","text":"Adding new datim sqlview functions: datim_sqlview() datim_orgunits() [2023-04-14] migrated MerQL repo packages","code":""},{"path":"https://usaid-oha-si.github.io/grabr/news/index.html","id":"grabr-100","dir":"Changelog","previous_headings":"","what":"grabr 1.0.0","title":"grabr 1.0.0","text":"Resolves bug caused dplyr update s3_unpack_keys called s3_objects [2023-02-16] Resolve bug lazy_secrets many default param using match.arg [2023-02-09] Limit credential pop running get_outable() [2023-01-26] Clean dependencies remove check_package() conflicting glamr [2022-12-01] Replace %ni% ! .. %%.. use imported object GitHub package, glamr [2022-11-21] Resolve outstanding issues around Pano folder name change affecting pano_extract_msd pano_extract_msds [2022-09-29] Adjust Pano folder name change affecting pano_extract [2022-09-26] Resolve bug lazy_secrets causing upstream errors get_ouuid dependent functions [2022-09-01] Update pano_extract provide current period information missing parameters [2022-08-22] Resolve Pano folder name change affecting pano_extract [2022-08-22] Add dependencies glamr gagglr [2022-08-15] Implement new internal function handle authentication decision tree - check user provided, check stored via glamr, lastly prompt creds [2022-08-05] Clean package/site [2022-08-04] Migrate full package glamr truncate API related functions [2022-08-04]","code":""}]
